/*
    This file is part of glCompact.
    Copyright (C) 2019-2020 Frederik Uje vom Hofe

    glCompact is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    glCompact is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Foobar.  If not, see <https://www.gnu.org/licenses/>.
*/
#include "glCompact/gl/Extensions.hpp"
#include "glCompact/ContextGroup.hpp"
#include <cstring>

namespace glCompact {
    namespace gl {
        void Extensions::init(
            const ContextGroup* contextGroup
        ) {
            //Needs at last 3.0! But unlike glGetString(GL_EXTENSIONS), it also work in core.
            int32_t extensionCount = 0;
            contextGroup->functions.glGetIntegerv(GL_NUM_EXTENSIONS, &extensionCount);
            auto extensionSupported = [&](const char* extensionName) -> bool {
                for (int32_t i = 0; i < extensionCount; ++i)
                    if (std::strcmp(extensionName, reinterpret_cast<const char*>(contextGroup->functions.glGetStringi(GL_EXTENSIONS, i))) == 0) return true;
                return false;
            };

            //name = extensionSupported(name);
            ///GET_EXTENSION_LIST
        }
    }
}
